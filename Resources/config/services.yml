parameters:
#    tesla_ws.example.class: Tesla\Bundle\WsBundle\Example

     tesla_ws.reader_cache_path: %kernel.cache_dir%/tesla_annot_reader
services:
#    tesla_ws.example:
#        class: %tesla_ws.example.class%
#        arguments: [@service_id, "plain_value", %parameter%]

    _tesla_ws.header_test_transformer:
        class: Tesla\Bundle\WsBundle\Mock\HeaderNormalizeTestService

    tesla_ws.vary_handler:
        class: Tesla\Bundle\WsBundle\Handlers\VaryHandler
        public: false

    tesla_ws.json_handler:
        class: Tesla\Bundle\WsBundle\Handlers\JsonHandler
        public: false
        arguments:
            - %KERNEL.ENVIRONMENT%

    tesla_ws.normalize_header_handler:
        class: Tesla\Bundle\WsBundle\Handlers\TransformHeaderHandler
        public: false
        calls:
            - [setContainer, [@service_container]]


    tesla_ws.handler_activator:
        class: Tesla\Bundle\WsBundle\Listener\HandlerActivator
        public: true
        arguments:
            - %tesla_ws.reader_cache_path%
            - @annotation_reader
            - %KERNEL.ENVIRONMENT%
        calls:
            - [setLogger, [@logger]]
            # add handlers for annotation alias name
            - [addHandler, [tesla_ws_normalize_header, @tesla_ws.normalize_header_handler]]
            - [addHandler, [tesla_ws_json, @tesla_ws.json_handler]]
            - [addHandler, [tesla_ws_vary, @tesla_ws.vary_handler]]
        tags:
            - { name: kernel.event_listener, event: kernel.controller, priority:-1 }
            - { name: kernel.event_listener, event: kernel.response, priority:-1 }
            - { name: kernel.event_listener, event: kernel.view, priority:-1 }
            - { name: kernel.event_listener, event: kernel.exception, priority:-1 }
